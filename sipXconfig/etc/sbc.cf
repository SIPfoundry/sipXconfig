# Copyright (C) 2015 SIPFoundry., certain elements licensed under a Contributor Agreement.
# Licensed to the User under the LGPL license.
# 
# This library is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
# details.
#

#
# sbc configuration for working with sipxecs
#
bundle agent sbc {
  methods:
    sbc::
      "any" usebundle => "sbc_config";
    any::
      "any" usebundle => "sbc_running";
}

bundle agent sbc_config {
  files:
    any::
      "$(sipx.SIPX_CONFDIR)/sbc_config.cfg"
        comment => "install $(this.promiser)",
        create => "true",
        perms => m("644"),
        edit_line => sbc_config_contents(),
        classes => if_repaired("sbc_properties_changed");
}

bundle edit_line sbc_config_contents() {
 insert_lines:
    any::
      "$(sipx.SIPX_CFDATA)/$(sipx.location_id)/sbc_config.cfg.part"
        insert_type => "file",
        expand_scalars => "true";

  delete_lines:
    any::
      ".*"; 
}

bundle agent sbc_running 
{
  vars:
    any::
      "service_command" string => "/usr/bin/oss_core";
      "daemon" string => "$(sipx.SIPX_SERVICEDIR)/oss_core";
      "service_user" string => "root";

  classes:
    sbc.sbc_properties_changed::
      "restart_sbc" not => fileexists("$(sipx.SIPX_CONFDIR)/sbc-config.cf-before-edit");      

  methods:
    any::
      "any" usebundle => find_service_by_command("$(service_command)", "sbc_running", "$(service_user)");

  commands:
    (!sbc|stop_sipxecs).sbc_running::
      "$(daemon)"
        comment => "stop oss_core",
        args => "stop";

    sbc.!sbc_running.!stop_sipxecs::
      "$(daemon)"
        comment => "start oss_core",
        args => "start";

    sbc.sbc_running.restart_sbc|ssl_repaired::
      "$(daemon)"
        comment => "restart oss_core",
        args => "restart";
}