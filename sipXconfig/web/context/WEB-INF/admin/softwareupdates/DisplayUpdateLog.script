<?xml version="1.0"?>
<!DOCTYPE script PUBLIC
    "-//Apache Software Foundation//Tapestry Script Specification 3.0//EN"
    "http://jakarta.apache.org/tapestry/dtd/Script_3_0.dtd">
<script>
	<include-script resource-path="/org/sipfoundry/sipxconfig/js/jquery-1.4.2.min.js"/>
    <body>
    <![CDATA[

        var logtextDiv, checkbox;

		var timer = null;
        var start_position = 1;
		var outputLog;
		var errorLog;
		var url_base = "http://" + getUrlBase();

        function scrollTimer() {
				readOutputLog();

				if (outputLog != undefined) {
					outputLog = replaceCRandSpaces(outputLog);

					if (outputLog.search(/END/) != -1) {
						if (getReturnedStatus(outputLog) != "0") {
							outputLog = removeStatusFromText(outputLog);
							printLog(outputLog);

							readAndDisplayErrorLog();
							updatePageComponentsAfterError();
						} else {
							outputLog = removeStatusFromText(outputLog);
							printLog(outputLog);
							updatePageComponentsAfterSuccess();
			                clearTimeout(timer);
			                timer = setTimeout('checkServer()', 2000);
						}
					} else {
						printLog(outputLog);
						timer = setTimeout("scrollTimer()", 1000);
					}
				} else
					timer = setTimeout("scrollTimer()", 1000);
        }

        function readAndDisplayErrorLog() {
			$.getJSON(url_base + "/retrieve-error-log.cgi?" + "jsoncallback=?", function(data) {
					errorLog = data.Message;
					errorLog = replaceCRandSpaces(errorLog);
					printLog("<span style=\"color:red;\">" + errorLog + "</span>");
				});
        }

        function readOutputLog() {
			$.getJSON(url_base + "/retrieve-update-log.cgi?start_pos=" + start_position + "&jsoncallback=?", function(data) {
				outputLog = data.Message;
				if (outputLog != undefined)
					start_position += (outputLog.split(/<br\/>/g).length - 1);
				});
        }

        function getReturnedStatus(outputLog) {
			var split = outputLog.split("<br/>");
			return split[split.length - 2];
        }

        function removeStatusFromText(text) {
			return text.substring(0, text.lastIndexOf(getReturnedStatus(text)));
        }

        function printLog(logText) {
			logtextDiv.innerHTML = logtextDiv.innerHTML + logText;

			if (checkbox.checked == true)
				logtextDiv.scrollTop = logtextDiv.scrollHeight;
        }

        function replaceCRandSpaces(text) {
			text = text.replace(/\n/g, "<br/>");
			return text.replace(/ /g,"&nbsp;");
        }

		function getUrlBase() {
			var host = location.host;
			var pos = host.indexOf(":");
			if (pos != -1)
				return host.substr(0, pos);
			else
				return host;
		}

		function updatePageComponentsAfterError() {
			$('#scrollPanel').hide();
			$('#installationIndicator').hide();
			$('#updateTitle').text("Software update failed!");
			$('#goToLoginButton').val("Go to Home");
			$('#goToLoginButton').show();
			$('#goToLoginButton').click(function() {
				location.href = url_base;
			});
		}

		function updatePageComponentsAfterSuccess() {
			$('#scrollPanel').hide();
			$('#installationIndicator').hide();
			$('#restartingIndicator').show();
			$('#updateTitle').text("Server is restarting...");
		}

		function removeBrokenLinks() {
			$('#navigation').hide();
			$('.bannerLinkDivider').hide();
			$('.linkHome').hide();
			$('.linkHelp').hide();
			$('.linkLogout').hide();
			$('#searchForm').hide();
		}

		function checkServer() {
			$.ajax({
			  url: location.href,
			  cache: false,
			  success: function(data, status) {
				if (data != undefined && data != '') {
					serverIsUp();
				} else
					timer = setTimeout('checkServer()', 2000);
			  },
			  error: function() {
				timer = setTimeout('checkServer()', 2000);
			  }
			});
		}

		function serverIsUp() {
			$('#restartingIndicator').hide();
			$('#updateTitle').text("Restart complete.");
			$('#goToLoginButton').show();
			$('#goToLoginButton').click(function() {
				location.href = url_base;
			});
		}

    ]]>
    </body>
    <initialization>
		jQuery(document).ready(function() {
				removeBrokenLinks();

				logtextDiv = document.getElementById('logtext');
				checkbox = document.getElementById('scroll');
				timer = setTimeout("scrollTimer()", 1000);
	        });
    </initialization>
</script>
