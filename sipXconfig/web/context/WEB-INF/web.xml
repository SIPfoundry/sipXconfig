<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

  <display-name>sipXconfig-web</display-name>
  <!--
    - Location of the XML file that defines the root application context
    - Applied by ContextLoaderListener.
  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
       classpath:/org/sipfoundry/sipxconfig/system.beans.xml
       classpath*:/org/sipfoundry/sipxconfig/*/**/*.beans.xml
       classpath:/org/sipfoundry/sipxconfig/api/jaxrs-server.xml
       classpath*:/sipxplugin.beans.xml
    </param-value>
  </context-param>

  <!--
    - When users go to the root URL, redirect them to the web app.
    - See http://jakarta.apache.org/tapestry/UsersGuide/configuration.html .
  -->
  <filter>
    <filter-name>redirect</filter-name>
    <filter-class>org.apache.tapestry.RedirectFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>redirect</filter-name>
    <url-pattern>/</url-pattern>
  </filter-mapping>

  <!--
    Configure Spring Security filters.  Use FilterChainProxy to avoid cluttering up
  -->
  <filter>
    <filter-name>sipxFilterChainProxy</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    <async-supported>true</async-supported>
  </filter>

  <filter-mapping>
    <filter-name>sipxFilterChainProxy</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--
    - Loads the root application context of this web app at startup.
    - The application context is then available via
    - WebApplicationContextUtils.getWebApplicationContext(servletContext).
  -->
  <listener>
    <listener-class>org.sipfoundry.sipxconfig.site.ContextLoaderListener</listener-class>
  </listener>

  <!-- START AXIS -->
  <listener>
    <listener-class>org.apache.axis.transport.http.AxisHTTPSessionListener</listener-class>
  </listener>
  <!-- END AXIS -->

  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>

  <!-- START CXF -->
  <servlet>
    <servlet-name>CXFServlet</servlet-name>
    <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
  </servlet>
  <!-- END CXF -->

  <servlet>
    <servlet-name>skin</servlet-name>
    <servlet-class>org.sipfoundry.sipxconfig.site.skin.SkinServlet</servlet-class>
  </servlet>

  <!-- START AXIS -->
  <servlet>
    <servlet-name>services</servlet-name>
    <servlet-class>com.workingmouse.webservice.axis.SpringAxisServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>AdminServlet</servlet-name>
    <servlet-class>org.apache.axis.transport.http.AdminServlet</servlet-class>
    <load-on-startup>100</load-on-startup>
  </servlet>
  <!-- END AXIS -->

  <!-- START CXF -->
  <servlet-mapping>
   <servlet-name>CXFServlet</servlet-name>
   <url-pattern>/api/*</url-pattern>
  </servlet-mapping>
  <!-- END CXF -->

  <servlet>
    <servlet-name>sipXconfig-web</servlet-name>
    <servlet-class>org.apache.tapestry.ApplicationServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <servlet>
    <servlet-name>rest</servlet-name>
    <servlet-class>org.sipfoundry.sipxconfig.rest.RestSpringAdapterServlet</servlet-class>
  </servlet>

  <!-- image servlet provided under jasper libraries -->
  <servlet>
	<servlet-name>ImageServlet</servlet-name>
    <servlet-class>net.sf.jasperreports.j2ee.servlets.ImageServlet</servlet-class>
  </servlet>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>/app</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>/initial-config/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>/mailbox/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>*.external</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>*.direct</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>*.sdirect</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>/assets/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>sipXconfig-web</servlet-name>
    <url-pattern>*.svc</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>skin</servlet-name>
    <url-pattern>/skin/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>rest</servlet-name>
    <url-pattern>/rest/*</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
	<servlet-name>ImageServlet</servlet-name>
    <url-pattern>/image</url-pattern>
  </servlet-mapping>

  <!-- START AXIS -->
  <servlet-mapping>
    <servlet-name>AdminServlet</servlet-name>
    <url-pattern>/servlet/AdminServlet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>services</servlet-name>
    <url-pattern>/services/*</url-pattern>
  </servlet-mapping>
  <!-- END AXIS -->

  <!-- Explicitly set session timeout to 15 minutes -->
  <!-- This value gets adjusted in LoginPage when user/admin logs in -->
  <session-config>
    <session-timeout>15</session-timeout>
  </session-config>

  <!-- START AXIS -->
  <mime-mapping>
    <extension>wsdl</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>
  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>
  <!-- END AXIS -->
  
  <!-- WEB SOCKET -->
  <!-- Processes application requests -->
  <servlet>
    <servlet-name>ws</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <async-supported>true</async-supported>
  </servlet>

  <servlet-mapping>
    <servlet-name>ws</servlet-name>
    <url-pattern>/api/ws/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ws</servlet-name>
    <url-pattern>/api/my/ws/*</url-pattern>
  </servlet-mapping>  
  <!-- END WEB SOCKET -->
</web-app>
