Name:     @PACKAGE@
Version:  @VERSION@
Release:  @PACKAGE_REVISION@

Summary: CDR (Call Distribution Record) aggregration
License:  Pingtel Commercial License
Group:    Productivity/Telephony/SIP/Servers
Vendor:   SIPFoundry
Packager: SIPFoundry <sipx-dev@list.sipfoundry.org>
Url:      http://www.sipfoundry.org

BuildRequires: automake
BuildRequires: rubygems
BuildRequires: ruby
# not really, but accomdates a persnickety autoconf macro
BuildRequires: unixODBC-devel
BuildRequires: sipxcommons >= %version

Source:   %name-%version.tar.gz

Requires: sipxcommserverlib >= %version
Requires: %name >= %version
Requires: postgresql-odbc
Requires: stunnel
Requires: ruby
Requires: ruby-dbi
Requires: rubygems
%if %{_vendor} == suse
Requires: rubygem-postgres
%else
Requires: ruby-libs
Requires: ruby-postgres
%endif

Obsoletes: sipxproxy-cdr

Prefix:    %_prefix
BuildRoot: %{_tmppath}/%name-%version-root

%description 
Gather CSE (Call State Events) for one or more proxy servers and generate
postgres database records from data.

%package client
Group: Productivity/Telephony/SIP/Servers
Vendor: SIPfoundry
Summary: Java API web service bindings for CDR info

%description client
jar of the Java API web service bindings for CDR stats

%prep
%setup -q

%build
%configure --enable-rpmbuild @SIPX_RPM_CONFIGURE_OPTIONS@
cp config.log %name.configlog
make %{_smp_mflags}

%install
rm -rf $RPM_BUILD_ROOT
make DESTDIR=$RPM_BUILD_ROOT install

%clean
rm -rf $RPM_BUILD_ROOT

%files 
%defattr(644,root,root,755)
%attr(755,root,root) %{_sysconfdir}/init.d/sipxcdr
%attr(755,root,root) %{_bindir}/sipxcdr-archive
%{_datadir}/sipxecs/cfinputs/plugin.d/sipxcdr.cf
%{_sysconfdir}/sipxpbx/cdr/*.sql
%{_var}/lib/sipxpbx/sipxcallresolver-*.gem

%post
%define gem_dir %(ruby -rrbconfig -e 'puts File::join(Config::CONFIG["libdir"],"/ruby/gems")')
%define rb_ver %(ruby -rrbconfig -e 'puts Config::CONFIG["ruby_version"]')
%define gem_home %{gem_dir}/%{rb_ver}

gem install --no-rdoc --local --install-dir %{gem_home} %{_var}/lib/sipxpbx/sipxcallresolver-*.gem >/dev/null 2>&1
if [ -f %{_sysconfdir}/cron.daily/callresolver_run ]; then
  rm -f %{_sysconfdir}/cron.daily/callresolver_run
fi

%preun
# Uninstall the sipxcallresolver gem, unless this RPM uninstall is part of
# an upgrade.
#   see http://fedoraproject.org/wiki/Packaging/ScriptletSnippets
if [ "$1" == "0" ] ; then
  gem uninstall sipxcallresolver >/dev/null 2>&1
fi

%files client
%defattr(644,root,root,755)
%{_datadir}/java/sipXecs/sipXconfig/cdr-bindings.jar
