# Copyright (C) 2012 eZuce Inc., certain elements licensed under a Contributor Agreement.
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the AGPL license.

#
# sipxcdr configuration and process management
#
bundle agent sipxcdr {
  methods:
    sipxcdr::
      "any" usebundle => "postgres";
      "any" usebundle => "sipxcdr_config";
    any::
      "any" usebundle => "sipxcdr_setup";
      "any" usebundle => "sipxcdr_running";
}

bundle agent sipxcdr_config {
  vars:
    any::
      "conf_file" slist => {
        "callresolver-config"
      };

  files:
    any::
      "$(sipx.SIPX_CONFDIR)/$(conf_file)"
        comment => "install CDR config $(this.promiser)",
        create => "true",
        perms => m("644"),
        copy_from => copy_from_cfdata("$(sipx.location_id)/$(conf_file)"),
        classes => if_repaired("restart_sipxcdr");
}

bundle agent sipxcdr_setup {
  methods:
    !src.sipxcdr::
      "any" usebundle => rh_chkconfig_status("sipxcdr on");
    !src.!sipxcdr::
      "any" usebundle => rh_chkconfig_status("sipxcdr off");
}

bundle agent sipxcdr_running {
  vars:
    any::
      "service_command" string => ".*\s$(sipx.SIPX_LIBDIR)/ruby/gems/[0-9.]+/gems/sipxcallresolver-[0-9.]+/lib/main.rb\s.*";

  methods:
    any::
      "any" usebundle => find_sipxservice_by_command_regex("$(service_command)","sipxcdr_running");

  commands:
    (!sipxcdr|restart_sipxecs).sipxcdr_running::
      "$(sipx.SIPX_SERVICEDIR)/sipxcdr"
        comment => "stop sipxcdr",
        args => "stop";

    sipxcdr.!sipxcdr_running::
      "$(sipx.SIPX_SERVICEDIR)/sipxcdr"
        comment => "start sipxcdr",
        args => "start";

    sipxcdr.sipxcdr_running.(restart_sipxecs|restart_sipxcdr)::
      "$(sipx.SIPX_SERVICEDIR)/sipxcdr"
        comment => "restart sipxcdr",
        args => "restart";
}
