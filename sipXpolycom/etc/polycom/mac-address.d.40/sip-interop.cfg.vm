<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--   Generated by sipXecs: http://www.sipfoundry.org/

   Instructions for integrating new configuration file content into sipXconfig:
     http://wiki.sipfoundry.org/display/xecsdev/Adding+Polycom+SoundPoint+IP+New+Configuration+File+Content+into+sipXconfig
-->
<polycomConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="polycomConfig.xsd">
  <voIpProt>
    <voIpProt.SIP
#set ($failover = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('failover').getValue())
      voIpProt.SIP.tcpFastFailover="$!{failover}"
#set ($allow_Transfer_On_Proceeding = "2")
      voIpProt.SIP.allowTransferOnProceeding="$!{allow_Transfer_On_Proceeding}"
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('protocol'))
#foreach ($setting in $cfg.getSettings($group))
      voIpProt.SIP.${setting.ProfileName}="$!{setting.Value}"
#end
   >
   <voIpProt.SIP.local
## XX-6959: Generate with voIpProt.local.port for compatibility with pre-3.2.2 firmware.
#set ($sip_local_port = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('local').getSetting('port'))
      voIpProt.SIP.local.port="$!{sip_local_port.Value}"
    />

   <voIpProt.SIP.serverFeatureControl
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('serverFeatureControl'))
#foreach ($setting in $cfg.getSettings($group))
      voIpProt.SIP.serverFeatureControl.${setting.ProfileName}="$!{setting.Value}"
#end
    />
      <voIpProt.SIP.outboundProxy
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt').getSetting('SIP.outboundProxy'))
#foreach ($setting in $cfg.getSettings($group))
        voIpProt.SIP.outboundProxy.${setting.ProfileName}="$!{setting.Value}"
#end
      />
      <voIpProt.SIP.alertInfo
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('alertInfo'))
#foreach ($subgroup in $group.Values)
#set ($parentProfileName = $subgroup.ProfileName)
#foreach ($setting in $subgroup.Values)
        voIpProt.SIP.alertInfo.${parentProfileName}.${setting.ProfileName}="$!{setting.Value}"
#end
#end
      />
      <voIpProt.SIP.requestValidation
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('requestValidation'))
#foreach ($subgroup in $group.Values)
#set ($parentProfileName = $subgroup.ProfileName)
#foreach ($setting in $subgroup.Values)
        voIpProt.SIP.requestValidation.${parentProfileName}.${setting.ProfileName}="$!{setting.Value}"
#end
#end
      >
        <voIpProt.SIP.requestValidation.digest
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('digest'))
#foreach ($setting in $cfg.getRecursiveSettings($group))
          voIpProt.SIP.requestValidation.digest.${setting.ProfileName}="$!{setting.Value}"
#end
        />
      </voIpProt.SIP.requestValidation>
      <voIpProt.SIP.specialEvent>
       <voIpProt.SIP.specialEvent.lineSeize
       #set ($setting=$cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('specialEvent').getSetting('lineSeize.nonStandard'))
        voIpProt.SIP.specialEvent.lineSeize.nonStandard="$!{setting.Value}"
      />
       <voIpProt.SIP.specialEvent.checkSync
       #set ($setting=$cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('specialEvent').getSetting('checkSync.alwaysReboot'))
        voIpProt.SIP.specialEvent.checkSync.alwaysReboot="$!{setting.Value}"
      />      
      </voIpProt.SIP.specialEvent>
      <voIpProt.SIP.conference
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('conference'))
#foreach ($setting in $cfg.getSettings($group))
        voIpProt.SIP.conference.${setting.ProfileName}="$!{setting.Value}"
#end
      />
      <voIpProt.SIP.dialog
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('dialog'))
#foreach ($setting in $cfg.getSettings($group))
        voIpProt.SIP.dialog.${setting.ProfileName}="$!{setting.Value}"
#end
      />
      <voIpProt.SIP.connectionReuse
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.SIP').getSetting('connectionReuse'))
#foreach ($setting in $cfg.getSettings($group))
        voIpProt.SIP.connectionReuse.${setting.ProfileName}="$!{setting.Value}"
#end
      />
    </voIpProt.SIP>
    <voIpProt.server
#set ($group = $cfg.EndpointSettings.getSetting('voIpProt.server.dhcp'))
#foreach ($setting in $cfg.getSettings($group))
      voIpProt.server.dhcp.${setting.ProfileName}="$!{setting.Value}"
#end
    />
  </voIpProt>
  <tone>
    <tone.dtmf
#set ($group = $cfg.EndpointSettings.getSetting('tone.dtmf'))
#foreach ($setting in $cfg.getSettings($group))
      tone.dtmf.${setting.ProfileName}="$!{setting.Value}"
#end
    />
  </tone>
<se>
<se.rt>
##    <!-- Ring classes 3 and 4 are used by the Intercom feature -->
#set ($ringAnswer = $cfg.EndpointSettings.getSetting('se/ringType/RING_ANSWER'))
      <se.rt.ringAutoAnswer
        se.rt.ringAutoAnswer.name="Ring Answer"
        se.rt.ringAutoAnswer.type="ring-answer"
        se.rt.ringAutoAnswer.timeout="$!{ringAnswer.getSetting('timeout').Value}"
        se.rt.ringAutoAnswer.ringer="$!{ringAnswer.getSetting('ringer').Value}"
        se.rt.ringAutoAnswer.callWait="$!{ringAnswer.getSetting('callWait').Value}"
        se.rt.ringAutoAnswer.mod="$!{ringAnswer.getSetting('mod').Value}"
      />
    <se.rt.custom1 se.rt.custom1.name="Silent" se.rt.custom1.ringer="ringer1" />
	<se.rt.custom2 se.rt.custom2.name="Low Trill" se.rt.custom2.ringer="ringer2" />
	<se.rt.custom3 se.rt.custom3.name="Low Double Trill" se.rt.custom3.ringer="ringer3" />
	<se.rt.custom4 se.rt.custom4.name="Medium Trill" se.rt.custom4.ringer="ringer4" />
	<se.rt.custom5 se.rt.custom5.name="Medium Double Trill" se.rt.custom5.ringer="ringer5" />
	<se.rt.custom6 se.rt.custom6.name="High Trill" se.rt.custom6.ringer="ringer6" />
	<se.rt.custom7 se.rt.custom7.name="High Double Trill" se.rt.custom7.ringer="ringer7" />
	<se.rt.custom8 se.rt.custom8.name="Highest Trill" se.rt.custom8.ringer="ringer8" />
	<se.rt.custom9 se.rt.custom9.name="Highest Double Trill" se.rt.custom9.ringer="ringer9" />
	<se.rt.custom10 se.rt.custom10.name="Beeble" se.rt.custom10.ringer="ringer10" />
	<se.rt.custom11 se.rt.custom11.name="Triplet" se.rt.custom11.ringer="ringer11" />
	<se.rt.custom12 se.rt.custom12.name="Ringback-style" se.rt.custom12.ringer="ringer12" />
	<se.rt.custom13 se.rt.custom13.name="Low Trill Precedence" se.rt.custom13.ringer="ringer13" />
	<se.rt.custom14 se.rt.custom14.name="Ring Splash" se.rt.custom14.ringer="ringer14" />
</se.rt>
</se>
<call
#foreach ($setting in ${call})
    call.${setting.ProfileName}="$!{setting.Value}"
#end
  >
    <call.shared
#set ($group = $cfg.EndpointSettings.getSetting('call').getSetting('shared'))
#foreach ($setting in $cfg.getSettings($group))
      call.shared.${setting.ProfileName}="$!{setting.Value}"
#end
    />
    <call.hold>
      <call.hold.localReminder
#set ($group = $cfg.EndpointSettings.getSetting('call.hold.localReminder'))
#foreach ($setting in $cfg.getSettings($group))
        call.hold.localReminder.${setting.ProfileName}="$!{setting.Value}"
#end
      />
    </call.hold>
  </call>
  <sec>
  <sec.srtp
#set ($group = $cfg.EndpointSettings.getSetting('sec').getSetting('srtp'))
#foreach ($setting in $cfg.getSettings($group))
      sec.srtp.${setting.ProfileName}="$!{setting.Value}"
#end
    />
  </sec>
  <request>
    <request.delay
#set ($group = $cfg.EndpointSettings.getSetting('request.delay'))
#foreach ($setting in $cfg.getSettings($group))
      request.delay.${setting.ProfileName}="$!{setting.Value}"
#end
    />
  </request>

#if ($phone.model.modelId == "polycom7000")
  <pnet
#set ($group = $cfg.EndpointSettings.getSetting('pnet'))
#foreach ($setting in $cfg.getSettings($group))
      pnet.${setting.ProfileName}="$!{setting.Value}"
#end
  />
#end

  <msg
#set ($group = $cfg.EndpointSettings.getSetting('msg'))
#foreach ($setting in $cfg.getSettings($group))
    msg.${setting.ProfileName}="$!{setting.Value}"
#end
  />
  
  <nat
#set ($group = $cfg.EndpointSettings.getSetting('nat'))
#foreach ($setting in $cfg.getSettings($group))
    nat.${setting.ProfileName}="$!{setting.Value}"
#end
  />

</polycomConfig>