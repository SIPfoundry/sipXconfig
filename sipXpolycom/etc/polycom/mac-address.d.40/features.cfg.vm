<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--   Generated by sipXecs: http://www.sipfoundry.org/

   Instructions for integrating new configuration file content into sipXconfig:
     http://wiki.sipfoundry.org/display/xecsdev/Adding+Polycom+SoundPoint+IP+New+Configuration+File+Content+into+sipXconfig
-->
<polycomConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="polycomConfig.xsd">
<se>
    <se.rt se.rt.enabled="1">
    </se.rt>
</se>
  <voice>
    #if ($phone.model.isSupported("voiceQualityMonitoring"))
    <voice.qualityMonitoring>
#set ($group = $cfg.EndpointSettings.getSetting('qualityMonitoring').getSetting('collector'))
      <voice.qualityMonitoring.collector voice.qualityMonitoring.collector.period="$!group.getSetting('period').Value">
        <voice.qualityMonitoring.collector.alert>
          <voice.qualityMonitoring.collector.alert.delay>
#set ($group = $cfg.EndpointSettings.getSetting('qualityMonitoring').getSetting('collector').getSetting('alert'))
            <voice.qualityMonitoring.collector.alert.delay.threshold voice.qualityMonitoring.collector.alert.delay.threshold.critical="$!group.getSetting('delay.threshold.critical').Value" voice.qualityMonitoring.collector.alert.delay.threshold.warning="$!group.getSetting('delay.threshold.warning').Value" />
          </voice.qualityMonitoring.collector.alert.delay>
          <voice.qualityMonitoring.collector.alert.moslq>
            <voice.qualityMonitoring.collector.alert.moslq.threshold voice.qualityMonitoring.collector.alert.moslq.threshold.critical="$!group.getSetting('moslq.threshold.critical').Value" voice.qualityMonitoring.collector.alert.moslq.threshold.warning="$!group.getSetting('moslq.threshold.warning').Value" />
          </voice.qualityMonitoring.collector.alert.moslq>
        </voice.qualityMonitoring.collector.alert>
#set ($group = $cfg.EndpointSettings.getSetting('qualityMonitoring').getSetting('collector'))
        <voice.qualityMonitoring.collector.enable voice.qualityMonitoring.collector.enable.periodic="$!group.getSetting('enable.periodic').Value" voice.qualityMonitoring.collector.enable.session="$!group.getSetting('enable.session').Value" voice.qualityMonitoring.collector.enable.triggeredPeriodic="$!group.getSetting('enable.triggeredPeriodic').Value" />
#set ($group = $cfg.EndpointSettings.getSetting('qualityMonitoring').getSetting('collector').getSetting('server'))
        <voice.qualityMonitoring.collector.server voice.qualityMonitoring.collector.server.1.address="$!group.getSetting('address').Value" voice.qualityMonitoring.collector.server.1.port="$!group.getSetting('port').Value" />
      </voice.qualityMonitoring.collector>
#set ($group = $cfg.EndpointSettings.getSetting('qualityMonitoring').getSetting('rtcpxr'))
      <voice.qualityMonitoring.rtcpxr voice.qualityMonitoring.rtcpxr.enable="$!group.getSetting('enable').Value" />
    </voice.qualityMonitoring>
#end
  </voice>
  
  <dir>
  <dir.local
#set ($group = $cfg.EndpointSettings.getSetting('dir'))
#foreach ($setting in $cfg.getRecursiveSettings($group))
    ${setting.ProfileName}="$!{setting.Value}"
#end
  />
  <dir.corp
#set ($group = $cfg.EndpointSettings.getSetting('dir.corp'))
#foreach ($setting in $cfg.getSettings($group))
    dir.corp.${setting.ProfileName}="$!{setting.Value}"
#end
#set ($group = $cfg.EndpointSettings.getSetting('dir.corp').getSetting('attribute'))
#foreach ($setting in $cfg.getSettings($group))
    dir.corp.attribute.${setting.ProfileName}="$!{setting.Value}"
#end
  />
  </dir>
 
  <pres
#set ($group = $cfg.EndpointSettings.getSetting('presence'))
#foreach ($setting in $cfg.getRecursiveSettings($group))
    ${setting.ProfileName}="$!{setting.Value}"
#end
  />

  <feature
#set ($group = $cfg.EndpointSettings.getSetting('feature'))
#foreach ($setting in $cfg.getSettings($group))
    feature.${setting.ProfileName}.enabled="$!{setting.Value}" 
#end
#if ($phone.model.isSupported("exchangeIntegration"))
 #set ($calendar = $cfg.EndpointSettings.getSetting('calendar/feature.exchangeCalendar.enabled'))
 #if($calendar)
    feature.exchangeCalendar.enabled="$!{calendar.Value}"
 #end
#end
  />
  <attendant
#set ($group = $cfg.EndpointSettings.getSetting('attendant'))
#foreach ($setting in $cfg.getSettings($group))
    attendant.${setting.ProfileName}="$!{setting.Value}"
#end
  />
  
  <roaming_buddies
#set ($group = $cfg.EndpointSettings.getSetting('roaming_buddies'))
#foreach ($setting in $cfg.getSettings($group))
    roaming_buddies.${setting.ProfileName}="$!{setting.Value}"
#end
  />
  <roaming_privacy
#set ($group = $cfg.EndpointSettings.getSetting('roaming_privacy'))
#foreach ($setting in $cfg.getSettings($group))
    roaming_privacy.${setting.ProfileName}="$!{setting.Value}"
#end
  />
#if ($phone.Model.ModelId == "polycomVVX500")
#set ($group = $cfg.EndpointSettings.getSetting('polycomVVX500bg'))
  <bg>
    <bg.color bg.color.selection="$group.getSetting('selection').Value">
      <bg.color.bm bg.color.bm.1.em.name="$group.getSetting('bm.1.em.name').Value" bg.color.bm.1.name="$group.getSetting('bm.1.name').Value" />
    </bg.color>
  </bg>
#elseif($phone.Model.ModelId == "polycomVVX1500")
#set ($group = $cfg.EndpointSettings.getSetting('polycomVVX1500bg'))
  <bg>
    <bg.VVX_1500>
      <bg.VVX_1500.color bg.VVX_1500.color.selection="$group.getSetting('selection').Value">
        <bg.VVX_1500.color.bm bg.VVX_1500.color.bm.1.name="$group.getSetting('bm.1.em.name').Value" />
      </bg.VVX_1500.color>
    </bg.VVX_1500>
  </bg>
#elseif($phone.Model.ModelId == "polycom670")
#set ($group = $cfg.EndpointSettings.getSetting('polycom670bg'))
  <bg>
    <bg.hiRes>
      <bg.hiRes.color bg.hiRes.color.selection="$group.getSetting('selection').Value">
        <bg.hiRes.color.bm bg.hiRes.color.bm.1.em.name="$group.getSetting('bm.1.em.name').Value" bg.hiRes.color.bm.1.name="$group.getSetting('bm.1.name').Value"/>
      </bg.hiRes.color>
    </bg.hiRes>
  </bg>
#elseif($phone.Model.ModelId == "polycom450")
#set ($group = $cfg.EndpointSettings.getSetting('polycom450bg'))
  <bg>
    <bg.medRes>
      <bg.medRes.gray bg.medRes.gray.selection="$group.getSetting('selection').Value">
        <bg.medRes.gray.bm bg.medRes.gray.bm.1.adj="$group.getSetting('bm.1.adj').Value" bg.medRes.gray.bm.1.name="$group.getSetting('bm.1.name').Value" />
      </bg.medRes.gray>
    </bg.medRes>
  </bg>
#elseif($phone.Model.ModelId == "polycom550" || $phone.Model.ModelId == "polycom560" || $phone.Model.ModelId == "polycom650")
#set ($group = $cfg.EndpointSettings.getSetting('polycom550bg'))
  <bg>
    <bg.hiRes>
      <bg.hiRes.gray bg.hiRes.gray.selection="$group.getSetting('selection').Value">
        <bg.hiRes.gray.bm bg.hiRes.gray.bm.1.adj="$group.getSetting('bm.1.adj').Value" bg.hiRes.gray.bm.1.em.name="$group.getSetting('bm.1.em.name').Value" bg.hiRes.gray.bm.1.name="$group.getSetting('bm.1.name').Value" />
      </bg.hiRes.gray>
    </bg.hiRes>
  </bg>
#end
</polycomConfig>
