#!/bin/bash
#
# sipxsupervisor         Start/Stop the cfengine server daemon.
#
# chkconfig: 35 99 20
# description: sipxsupervisor is responsible from giving out configuration files to
#              those cfengine clients, who wish to update their configs.
#              For more information, visit http://www.cfengine.org
# processname: cf-serverd
# config: /var/cfengine/masterfiles

# Source function library.
. /etc/init.d/functions
. @SIPX_LIBEXECDIR@/sipx-utils.sh || { echo_failure; echo; exit $ENOENT; }

config="@SIPX_CFINPUTS@/sipxsupervisord.cf"
exec="/usr/sbin/cf-serverd"
prog=$(basename $exec)
progName="cf-serverd"
# used to tell which config is in use.
configid=/var/run/sipxsupervisor-configid

[ -e /etc/sysconfig/sipxsupervisor ] && . /etc/sysconfig/sipxsupervisor

lockfile=/var/lock/subsys/$prog
sipxagentlockfile="@SIPX_RUNDIR@/sipxagent.lock"

start() {
  [ -x $exec ] || { echo -n "$execError"; echo_failure; echo; exit $ENOEXEC; }
  [ -f $config ] || { echo -n "$invalidFileError"; echo_failure; echo; exit $ENOENT; }
  checkRunningInstance "root" $exec > /dev/null
  Status=$?
  [ $Status -eq 0 ] && { echo -n "$prog $runningError"; echo_failure; echo; exit $ERUNNING; }

  echo -n $config > $configid
  echo -n $"Starting $progName: "
  daemon $exec -f $config
  Status=$?
  [ $Status -eq 0 ] && touch $lockfile

  if [ $# -gt 0 ]; then
    checkRunningInstanceTimeout "root" $exec $maxTimeout
    Status=$?
    [ $Status -eq $ESRCH ] && { echo_failure; echo; exit $ESRCH; }

    #sipxagent running
    if [ -f @sipxagentlockfile ]; then
      checkIfListening $progName
      Status=$?
      [ $Status -eq 0 ] || { echo_failure; echo; exit $ENOSCKT; }
      [ $Status -eq 0 ] && { echo_success; echo; return $Status; }
    fi
  fi

  #if sipxagent is not running make sure the host is pulling the last configuration on startup.
  #this applies in cases when secondary host starts after master, and master changed configuration
  #while the secondary is down. sipxagent has to be run as root because we don't want to go through
  #supervisor again
  if [ ! -f $sipxagentlockfile ]; then
    runuser - root -s @SIPX_BINDIR@/sipxagent

    if [ $# -gt 0 ]; then
      checkIfListening $prog
      Status=$?
      [ $Status -eq 0 ] || { echo_failure; echo; exit $ENOSCKT; }
      [ $Status -eq 0 ] && { echo_success; echo; return 0; }
    fi
  fi

}

nofork() {
  killAnyOrphans "root" $exec
  $exec -v -f $config
}

stop() {
  echo -n $"Stopping $progName: "
  killproc $prog
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f $lockfile
  killAnyOrphans "root" $exec
  return $RETVAL
}

restart() {
  stop
  start $withCheck
}

asyncrestart() {
  stop
  start
}

restart() {
  stop
  start
}

reload() {
  restart
}

force_reload() {
  restart
}

case "$1" in
  start)
    start $withCheck
    ;;
  stop|restart|asyncrestart|reload|nofork)
    $1
    ;;
  force-reload)
    force_reload
    ;;
  status)
    checkRunningInstance "root" $exec $prog
    ;;
  # condrestart - only restarts if service *is* running
  condrestart)
    checkRunningInstance "root" $exec > /dev/null
    Status=$?
    [ $Status -eq 0 ] || restart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|asyncrestartcondrestart|condstart|reload|force-reload|nofork}"
    exit $EINCORRECTUSAGE
esac
exit $?
