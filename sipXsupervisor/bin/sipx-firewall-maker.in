#!/usr/bin/ruby

#
# Generated a zone file from data file with know server name and addresses
#

require 'optparse'
require 'erb'
require 'yaml'

def firewall(yaml, template, out)
  data = YAML::load_file(yaml)
  out.puts firewall_generate(data, template)
end

def firewall_generate(data, template)
  erb = ERB.new(File.read(template))
  erb.filename = template
  var = binding
  data.each_key { |x|
    eval "#{x} = data['#{x}']", var
  }
  return erb.result(var)
end


if __FILE__ == $0

args = OptionParser.new { |opts|
  opts.banner = "Usage : sipx-firewall-maker [options]"

  opts.separator ""
  opts.separator "Options:"

  opts.on("--help", "Print this help message.") {
    puts opts
    exit
  }

  opts.on("--example", "Print an example firewall file") {
puts <<EOF
TBD
EOF
  exit
  }

  $template = '@SIPX_CONFDIR@/firewall/firewall.erb'
  opts.on("--template FILE", "ERB formated template. Default is #{$template}") {|f|
    $template = f
  }

  $yaml = '@SIPX_CFDATA@/firewall.yaml'
  opts.on("--in FILE", "YAML formated file for firewall config. Default is #{$yaml}") {|f|
    $yaml = f
  }

  $out = STDOUT
  opts.on("--out FILE", "Write to file, otherwise output is sent to stdout") {|f|
    $out = File.open(f, 'w')
  }
}
  args.parse!

  firewall($yaml, $template, $out)
end

