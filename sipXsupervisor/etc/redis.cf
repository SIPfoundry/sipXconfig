# Copyright (c) 2012 eZuce, Inc. All rights reserved.
# Contributed to SIPfoundry under a Contributor Agreement

# This software is free software; you can redistribute it and/or modify it under
# the terms of the Affero General Public License (AGPL) as published by the
# Free Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.

#
# This is redis configuration. Uses either /etc/init.d./redis (centos 6) or 
# /bin/systemctl (fedora 16) scripts whichever are available.
#

bundle agent redis {
  methods:
    any::
      "any" usebundle => "redis_running";
}

bundle agent redis_running {
  vars:
    "service" string => "redis.service";

  classes:
    any::
      "redis_running" expression => returnszero("$(sipx.systemctl) is-active $(service)","noshell");

  files:
    redis::
      "$(sipx.SIPX_CONFDIR)/redis-client.ini"
        comment => "Redis client config for SQA $(this.promiser)",
        perms => mog("655", "root", "root"),
        copy_from => copy_from_cfdata("$(sipx.location_id)/redis-client.ini"),
        classes => if_repaired("restart_redis_clients");

      "/etc/redis.conf"
        comment => "update bind address from redis.conf",
        edit_line => redis_update_bind_address,
        classes => if_repaired("restart_redis");

  commands:
    !redis.redis_running::
      "$(sipx.systemctl)"
        comment => "stop redis",
        args => "stop $(service)";

      "$(sipx.systemctl)"
        comment => "disable redis",
        args => "disable $(service)";

    redis.!redis_running::
      "$(sipx.systemctl)"
        comment => "start redis",
        args => "start $(service)";

      "$(sipx.systemctl)"
        comment => "enable redis",
        args => "enable $(service)";

    redis.redis_running.restart_redis::
      "$(sipx.systemctl)"
        comment => "restart redis",
        args => "restart $(service)";
}

bundle edit_line redis_update_bind_address {
  delete_lines:
    "^bind\s.*";

  insert_lines:
    "bind 0.0.0.0";
}

