# Copyright (c) 2012 eZuce, Inc. All rights reserved.
# Contributed to SIPfoundry under a Contributor Agreement

# This software is free software; you can redistribute it and/or modify it under
# the terms of the Affero General Public License (AGPL) as published by the
# Free Software Foundation; either version 3 of the License, or (at your option)
# any later version.

# This software is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for more
# details.

#
# This is redis configuration. Uses either /etc/init.d./redis (centos 6) or 
# /bin/systemctl (fedora 16) scripts whichever are available.
#

bundle agent redis {
  methods:
    redis::
      "any" usebundle => "redis_running";
}

bundle agent redis_running {
  vars:
   "service" string => "/etc/init.d/redis";
   "service_command" string => "/usr/sbin/redis-server";

  methods:
    "any" usebundle => find_service_by_command("$(service_command)", "redis_running", "redis");
    !src.!redis::
      "any" usebundle => rh_chkconfig_status("redis off");
    redis::
      "any" usebundle => rh_chkconfig_status("redis on");

  files:
    redis::
      "$(sipx.SIPX_CONFDIR)/redis-client.ini"
        comment => "Redis client config for SQA $(this.promiser)",
        perms => mog("655", "root", "root"),
        copy_from => copy_from_cfdata("$(sipx.location_id)/redis-client.ini"),
        classes => if_repaired("restart_redis_clients");

      "/etc/redis.conf"
        comment => "remove bind 127.0.0.1 from redis.conf",
        edit_line => delete_lines_matching('bind 127.0.0.1'),
        classes => if_repaired("restart_redis");

  commands:
    !redis.redis_running::
      "$(service)"
        comment => "stop redis",
        args => "stop";

    redis.!redis_running::
      "$(service)"
        comment => "start redis",
        args => "start";

    redis.redis_running.restart_redis::
      "$(service)"
        comment => "start redis",
        args => "restart";
}

